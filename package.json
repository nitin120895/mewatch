{
	"name": "toggle-web",
	"version": "1.50.76-ref5.0.0-fr1.110.6",
	"description": "mewatch web application for Mediacorp",
	"author": "Massive Interactive Inc.",
	"license": "closed",
	"private": true,
	"engines": {
		"node": ">=12.22.4"
	},
	"scripts": {
		"start": "npm run dev",
		"postinstall": "node build/script/post-install",
		"predev": "npm run clean app/pub",
		"dev": "npm run build:server:dev:cond && npm run server:dev",
		"dev:ssl": "cross-env SSL=true npm run dev",
		"dev:ssr": "cross-env SSR=true npm run build:server:dev && npm run server:dev",
		"dev:ssr:nojs": "cross-env NO_JS=true npm run dev:ssr",
		"dev:ssr:watch": "nodemon --exec npm run dev:ssr:nojs --ext 'ts,tsx' --watch src --watch '.env' --delay 2",
		"predev:components": "npm run predev",
		"dev:components": "npm run build:server:dev:components && npm run server:dev:components",
		"prod": "npm run build && npm run server",
		"prod:static": "npm run build:static && npm run server",
		"prebuild": "npm run clean app",
		"build": "npm run build:client && npm run build:server",
		"prebuild:client": "node build/script/prep-client",
		"build:client": "webpack --config build/webpack/webpack.client.js --env.prod",
		"prebuild:static": "npm run prebuild",
		"build:static": "npm run build:client:static && npm run build:server",
		"build:client:static": "webpack --config build/webpack/webpack.client.js --env.prod --env.static",
		"prebuild:qa": "npm run clean",
		"build:qa": "webpack --config build/webpack/webpack.client.js --env.static --env.qa --env.prod --env.analyzer",
		"prebuild:server": "node build/script/prep-server",
		"build:server": "webpack --config build/webpack/webpack.server.js --env.prod",
		"prebuild:server:dev": "npm run prebuild:server",
		"build:server:dev": "webpack --config build/webpack/webpack.server.js --env.dev",
		"prebuild:server:dev:cond": "npm run prebuild:server",
		"build:server:dev:cond": "shx test -e bin/app/server/index.dev.js || npm run build:server:dev",
		"prebuild:server:dev:components": "npm run prebuild:server",
		"build:server:dev:components": "webpack --config build/webpack/webpack.server.js --env.dev --env.components",
		"clean": "node build/script/clean",
		"setup:env": "shx test -e .env || shx cp -n .env-sample .env",
		"gen:service": "node build/script/gen-service",
		"prep:release": "node build/script/prep-release",
		"prep:explorer": "node build/script/prep-explorer",
		"lint": "npm run lint:code:fix && npm run lint:styles",
		"lint:ci": "npm run lint:code && npm run lint:styles",
		"lint:code": "tslint \"./src/**/*.ts?(x)\" \"./build/**/*.js\"",
		"lint:code:fix": "tslint \"./src/**/*.ts?(x)\" \"./build/**/*.js\" --fix",
		"lint:styles": "stylelint \"./src/**/*.scss?(x)\" --syntax scss",
		"server": "node ./bin/app/server",
		"server:gc-trace": "node --trace_gc ./bin/app/server",
		"server:debug": "node --inspect --gc_interval=100 ./bin/app/server",
		"server:dev": "node bin/app/server/index.dev.js",
		"server:dev:components": "cross-env COMPONENTS=true node bin/app/server/index.dev.js",
		"test": "jest --config build/test/jest.config.json",
		"test:watch": "jest --config build/test/jest.config.json --watch",
		"test:cover": "jest --config build/test/jest.config.json --coverage",
		"pretest:ci": "shx mkdir -p bin/test/result",
		"test:ci": "cross-env TEST_REPORT_PATH=bin/test/result jest --config build/test/jest.config.json --silent",
		"format": "npm run format:js && npm run format:css && npm run format:json",
		"format:json": "prettier --parser json --use-tabs --print-width 120 --write \"{src/**/,build/**/,resource/**/,}*.json\"",
		"format:js": "prettier --parser typescript --use-tabs --single-quote --print-width 120 --write \"{src,build}/**/*.{js,ts,tsx}\"",
		"format:css": "prettier --parser css --use-tabs --print-width 120 --write \"{src,build,resource}/**/*.{css,scss}\"",
		"precommit": "lint-staged",
		"predev:tv": "npm run clean && npm run prebuild:client:static:tv",
		"dev:tv": "npm run build:server:dev:cond:tv && npm run server:dev:tv",
		"dev:tizen": "cross-env TIZEN=true TIZEN_HOSTED=true npm run dev:tv",
		"dev:webos": "cross-env WEBOS=true WEBOS_HOSTED=true npm run dev:tv",
		"dev:xbox": "cross-env XBOX=true XBOX_HOSTED=true npm run dev:tv",
		"build:tv": "npm run clean && npm run build:client:static:tv",
		"build:tizen": "cross-env TIZEN=true npm run build:tv",
		"build:tizen:hosted": "cross-env TIZEN=true TIZEN_HOSTED=true npm run build:tv",
		"build:webos": "cross-env WEBOS=true npm run build:tv",
		"build:webos:hosted": "cross-env WEBOS=true WEBOS_HOSTED=true npm run build:tv",
		"build:xbox": "cross-env XBOX=true npm run build:tv",
		"build:xbox:hosted": "cross-env XBOX=true XBOX_HOSTED=true npm run build:tv",
		"postbuild:xbox": "cross-env XBOX=true node build/script/post-client-static-xbox.js",
		"package:webos": "build/script/package-webos.sh bin/app/pub",
		"package:webos:hosted": "build/script/package-webos.sh bin/app/webos-ipk",
		"tizentool": "node resource/certs/tizentool/tizentool.js",
		"package:tizen": "npm run tizentool -- pack bin/app/pub bin/tizen.wgt --sign",
		"package:tizen:hosted": "npm run tizentool -- pack bin/app/tizen-wgt bin/tizen.wgt --sign",
		"release:tizen": "CERT_AUTHOR_PATH=resource/certs/tizen/client.p12 npm run package:tizen",
		"prebuild:client:static:tv": "cross-env TV=true node build/script/prep-client",
		"build:client:static:tv": "cross-env TV=true webpack --config build/webpack/webpack.client.js --env.prod --env.static --env.tv",
		"prebuild:qa:tv": "npm run clean",
		"build:qa:tv": "cross-env TV=true webpack --config build/webpack/webpack.client.js --env.static --env.qa --env.prod --env.viewer --env.analyzer --env.tv",
		"prebuild:server:tv": "cross-env TV=true node build/script/prep-server",
		"prebuild:server:dev:tv": "npm run prebuild:server:tv",
		"build:server:dev:tv": "cross-env TV=true webpack --config build/webpack/webpack.server.js --env.dev --env.tv",
		"build:server:dev:cond:tv": "shx test -e bin/app/server/index.dev.tv.js || npm run build:server:dev:tv",
		"server:dev:tv": "cross-env TV=true node bin/app/server/index.dev.tv.js"
	},
	"dependencies": {
		"@ease-live/ease-live-bridge-web": "^1.18.0",
		"@wscsports/blaze-web-sdk": "^0.1.98",
		"baseguide": "^1.9.0",
		"basic-auth": "^1.0.4",
		"body-parser": "^1.16.0",
		"bunyan": "^1.8.12",
		"bunyan-debug-stream": "^2.0.0",
		"bunyan-middleware": "^0.8.0",
		"classnames": "^2.2.6",
		"cookie-parser": "^1.4.3",
		"core-js": "^2.4.1",
		"cross-fetch": "^3.0.2",
		"dayjs": "^1.7.7",
		"dotenv": "^7.0.0",
		"express": "^4.14.0",
		"hashids": "^1.1.1",
		"helmet": "^3.16.0",
		"html-minifier": "^3.5.21",
		"ioredis": "^2.4.0",
		"mixpanel-browser": "^2.45.0",
		"newrelic": "^7.5.2",
		"nodemon": "^1.18.11",
		"object-assign": "^4.1.0",
		"parseurl": "^1.3.1",
		"picturefill": "^3.0.2",
		"preact": "^7.2.1",
		"preact-compat": "^3.14.3",
		"prop-types": "^15.5.10",
		"query-string": "^6.2.0",
		"react": "^15.6.1",
		"react-app-polyfill": "1.0.6",
		"react-dom": "^15.6.1",
		"react-helmet": "5.2.0",
		"react-intl": "^2.3.0",
		"react-redux": "^4.4.5",
		"react-router": "2.8.1",
		"redux": "^3.7.2",
		"redux-thunk": "^2.1.0",
		"rxjs": "^6.3.1",
		"shaka-player": "^2.5.2",
		"shx": "^0.3.2",
		"tslib": "1.9",
		"uuid": "^3.3.2"
	},
	"devDependencies": {
		"@types/basic-auth": "^0.0.30",
		"@types/chai": "^4.1.7",
		"@types/classnames": "^2.2.7",
		"@types/cookie-parser": "^1.3.30",
		"@types/core-js": "^2.4.0",
		"@types/enzyme": "^2.8.1",
		"@types/express": "^4.0.35",
		"@types/express-serve-static-core": "^4.0.40",
		"@types/helmet": "^0.0.43",
		"@types/html-minifier": "^3.5.3",
		"@types/ioredis": "^0.0.22",
		"@types/isomorphic-fetch": "^0.0.34",
		"@types/jest": "^24.0.11",
		"@types/mime": "^0.0.29",
		"@types/newrelic": "^4.11.0",
		"@types/node": "^7.0.0",
		"@types/prop-types": "^15.5.1",
		"@types/react": "^15.0.34",
		"@types/react-addons-create-fragment": "^0.14.15",
		"@types/react-addons-css-transition-group": "^15.0.0",
		"@types/react-addons-perf": "^0.14.18",
		"@types/react-addons-update": "^0.14.15",
		"@types/react-dom": "^0.14.20",
		"@types/react-helmet": "^5.0.8",
		"@types/react-intl": "^2.3.1",
		"@types/react-redux": "^4.4.35",
		"@types/react-router": "^2.0.50",
		"@types/redux": "^3.6.0",
		"@types/redux-mock-store": "^0.0.7",
		"@types/redux-thunk": "^2.1.0",
		"@types/sinon": "^7.0.10",
		"@types/webpack": "^4.4.25",
		"autoprefixer": "^6.6.1",
		"chai": "^4.2.0",
		"cross-env": "^5.2.0",
		"css-loader": "^2.1.1",
		"enzyme": "^2.9.1",
		"express-http-proxy": "1.0.3",
		"file-loader": "^3.0.1",
		"fork-ts-checker-webpack-plugin": "^1.0.0",
		"html-webpack-plugin": "^3.2.0",
		"husky": "^1.3.1",
		"jest": "^24.5.0",
		"jest-junit-reporter": "^1.1.0",
		"lint-staged": "^8.1.5",
		"mini-css-extract-plugin": "^0.5.0",
		"node-sass": "^4.12.0",
		"openapi-client": "^1.0.5",
		"postcss-loader": "^3.0.0",
		"prettier": "^1.16.4",
		"progress-bar-webpack-plugin": "^1.12.1",
		"react-addons-perf": "^15.4.2",
		"react-hot-ts": "^0.7.2",
		"react-test-renderer": "^15.6.1",
		"redux-mock-store": "^1.2.0",
		"resolve-url-loader": "^3.0.1",
		"sass-loader": "^7.1.0",
		"shelljs": "^0.8.3",
		"sinon": "^7.3.1",
		"style-loader": "^0.23.1",
		"stylelint": "^9.10.1",
		"stylelint-webpack-plugin": "^0.10.5",
		"sw-precache-webpack-plugin": "^0.11.5",
		"terser-webpack-plugin": "^1.2.3",
		"ts-jest": "^24.0.0",
		"ts-loader": "^5.3.3",
		"tslint": "^5.14.0",
		"tslint-loader": "^3.5.4",
		"typescript": "3.4.5",
		"url-loader": "^1.1.2",
		"webpack": "^4.29.6",
		"webpack-bundle-analyzer": "^3.1.0",
		"webpack-cli": "^3.2.3",
		"webpack-dev-middleware": "^3.6.1",
		"webpack-hot-middleware": "^2.24.3",
		"webpack-stats-plugin": "^0.2.1"
	},
	"prettier": {
		"printWidth": 120,
		"useTabs": true,
		"overrides": [
			{
				"files": "*.{js,ts,tsx}",
				"options": {
					"singleQuote": true,
					"parser": "typescript"
				}
			},
			{
				"files": "*.json",
				"options": {
					"parser": "json"
				}
			},
			{
				"files": "*.{scss,css}",
				"options": {
					"parser": "css"
				}
			}
		]
	},
	"lint-staged": {
		"*.json": ["prettier --parser json --use-tabs --print-width 120 --write", "git add"],
		"!(*min).{js,ts,tsx}": [
			"tslint --fix",
			"prettier --parser typescript --use-tabs --single-quote --print-width 120 --write",
			"git add"
		],
		"*.{scss,css}": ["prettier --parser css --use-tabs --print-width 120 --write", "git add"]
	},
	"browserslist": {
		"production": ["defaults", "IE 11"],
		"development": ["last 1 chrome version", "last 1 firefox version", "last 1 safari version", "IE 11"]
	}
}
